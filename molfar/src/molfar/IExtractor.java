package molfar;

import java.awt.image.BufferedImage;

public interface IExtractor {
    
    /*
     * Запуск алгоритма вычисления признаков для входного изображения 
     */
    void extract(BufferedImage image);
    
    /*
     * Возвращает нормализованный вектор полной длинны с нулями для замаскированных признаков 
     */
    byte[] getVector();
    
    /*
     * Возвращает нормализованный вектор такой длины сколько единиц в маске, по умолчанию в маске все единици
     * ВОЗМОЖНО ИЗМЕНИТЬ В КОДЕ НОРМАЛИЗАЦИЮ? ЧТо были числа от 0..255 и тогда передавать масив byte[] а не double[] ?
     */
    byte[] getShortVector();
    
    /*
     * Например sample - выборка изображений разных классов для вычисления кластеров 
     */
    void adjustment( BufferedImage[] sample );
    
     /*
      * Например mask - бинарный вектор, единица которого позволяет не 
      * вычислять отдельные признаки, уменьшая етим вычислительные затраты и уменьшая длину вектора признаков
      * длина маски всегда равна максимальной длинне дескриптора
      */
    void adjustment( byte[] mask );
    
    /*
     * Возвращает максимальную длинну дескриптора
     */
    int getMaxLength();
    
    /*
     * Возвращает текущую длинну дескриптора
     */
    int getCurrLength();
    
    /*
    * возвращает название екстрактора
    */
    String getName();
}
